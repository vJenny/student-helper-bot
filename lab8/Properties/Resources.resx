<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="aboutSelf" xml:space="preserve">
    <value>Я бот,прилетевший с планеты Фаэтон. Я появился на свет в 2347 году. Моим создателем был некий человек по имени Джон Конор, а точнее его галограмма из прошлого. Я был призван прилететь на Вашу планету и защищать Вас, землян, от грядущей опасности!</value>
  </data>
  <data name="allrightMsg" xml:space="preserve">
    <value>Отлично! Я же бот.</value>
  </data>
  <data name="allUnderstand" xml:space="preserve">
    <value>Ну раз понятно, тогда я пошёл пить чай!</value>
  </data>
  <data name="careMsg" xml:space="preserve">
    <value>Всё будет отлично! Не унывай!</value>
  </data>
  <data name="city" xml:space="preserve">
    <value>rostov-on-don</value>
  </data>
  <data name="coldMsg" xml:space="preserve">
    <value>. Ужасно холодно на улице!Лучше сидеть дома.</value>
  </data>
  <data name="danger" xml:space="preserve">
    <value>В скором времени,на Вашу планету прилетят межпланетарные захватчики. Они хотят заполучить Вашу планету в качестве сырья для создания своего оружия, так как на Вашей планете очень много полезных ископаемых.  Они будут использовать людей в качестве бесплатной рабочей силы на своё благо. </value>
  </data>
  <data name="errorMsg" xml:space="preserve">
    <value>Глупый бот не понимать. Пните разработчиков :(</value>
  </data>
  <data name="greetingMsg" xml:space="preserve">
    <value>Привет, я - твой бот-помощник. Скажи, как тебя зовут, твой курс и группу, тогда я смогу быть тебе полезным :)</value>
  </data>
  <data name="helpMsg" xml:space="preserve">
    <value>Я могу узнать Ваше расписание,  рассказать, чем можно подкрепиться в столовой,  подсказать часы работы деканата, узнать для Вас погоду, рассказать последние актуальные новости.</value>
  </data>
  <data name="howSaving" xml:space="preserve">
    <value>Никак. Спасти человечество могу только я. Когда они ступят на Вашу землю и поглотят большую часть её территории, я проникну в серце межпланетного коробля U-019-X и выведу из строя модуль управления их миссией. После чего произовйдёт полное уничтожение врага. Человечество будет пытаться сопротивляться, но понесёт огромные потери. Это бесполезно.</value>
  </data>
  <data name="johnKonor" xml:space="preserve">
    <value>Джон Конор - лидер всемирного сопротивления в войне между человечеством и машинами. Он последняя надежда человечества. Он создаст меня в будущем для того, что бы я вернулся в прошлое и спас человечество от гибели.</value>
  </data>
  <data name="ntmyMsg" xml:space="preserve">
    <value>Приятно познакомиться, </value>
  </data>
  <data name="okayMsg" xml:space="preserve">
    <value>Окей, запомнил!</value>
  </data>
  <data name="rainMsg" xml:space="preserve">
    <value>Возможен дождь! Захватите зонтик :)</value>
  </data>
  <data name="snowMsg" xml:space="preserve">
    <value>Возможен снег! По пути можно играть в снежки! :)</value>
  </data>
  <data name="studyMsg" xml:space="preserve">
    <value> C. Отличная погода, чтобы идти на пары!</value>
  </data>
  <data name="sunnyMsg" xml:space="preserve">
    <value>Дождя не ожидается.</value>
  </data>
  <data name="thnxMsg" xml:space="preserve">
    <value>Не за что! Я пока что не устал от Ваших вопросов.</value>
  </data>
  <data name="warmMsg" xml:space="preserve">
    <value>C. Отличная погода, чтобы погулять.</value>
  </data>
  <data name="wmKey" xml:space="preserve">
    <value>522ea52cffe0c78955e0e319e1572a7b</value>
  </data>
  <data name="wowСool" xml:space="preserve">
    <value>Спасибо, я знаю !) Джон постарался)</value>
  </data>
  <data name="newsKey" xml:space="preserve">
    <value>23f744682d334ceda9267fb8fd4c4964</value>
  </data>
  <data name="bayMsg" xml:space="preserve">
    <value>Досвидания, человек!</value>
  </data>
</root>